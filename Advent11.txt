import numpy as np
def column(A, i):
    return [row[i] for row in A]

def distance(A, B):
    return(abs(B[0]-A[0])+abs(B[1]-A[1]))
   
def sumdist(list):
    x=len(list)-1
    while x > 0:
        for y in range(0, x):
            a=distance(list[x],list[y])
            dist.append(a)  
        x-=1

with open('[location]', 'r') as f:
    list=[line.strip('\n') for line in f] 

A=[]
rowadd=[]
coladd=[]
###### put together A
for row in list:
    tlist=[]
    for char in row:
        tlist.append(char)
    A.append(tlist)
dimensions=np.shape(A)
rows,cols=dimensions

###### expanding A row and column
for x in range(0,rows):
    if '#' not in A[x]:
        rowadd.append(x)
for x in range(0,cols):
    if '#' not in column(A, x):
        coladd.append(x)
rowadd.reverse()
coladd.reverse()

for x in rowadd:
    A.insert(x,['.']*rows)
for row in A:
    for x in coladd:
        row.insert(x, '.')
#with open('11-out2.txt', 'w') as f:
#    for row in A:
#        f.writelines(row)
#        f.writelines("\n")
#    f.close()
###### distances
locations=[]
dimensions=np.shape(A)
rows,cols=dimensions
for x in range(0,rows):
    for y in range(0,cols):
        if A[x][y]=='#':
            locations.append([x,y])
print(locations)
dist=[]
sumdist(locations)
print(dist)
sum=0
for x in dist:
    sum=sum+x
print('sum:',sum)